{
    "caffe.launcher": "Path to script that launches Caffe benchmarks.",
    "caffe.fork": "A fork of Caffe. Possible values may vary including 'bvlc', 'nvidia' and 'intel'",
    "caffe.phase": "Caffe's benchmark phase. Possible values are 'train' and 'deploy'.",
    "caffe.action": "Action that needs to be performed by caffe. Possible values are 'train' or 'time'.",
    "caffe.model_file": "Caffe's prototxt model file.",
    "caffe.solver_file": "Caffe's prototxt solver file.",
    "caffe.model_dir": "Directory where Caffe's model file is located. Different for host/docker benchmarks.)$",
    "caffe.solver": "A content for a Caffe's solver file in case Caffe benchmarks train phase.",
    "caffe.args": "Command line arguments that launcher uses to launch Caffe.",
    "caffe.data_dir": "A data directory if real data should be used. If empty, synthetic data is used (no data ingestion pipeline).",
    "caffe.mirror": "In case of real data, specifies if 'mirrowing' should be applied.",
    "caffe.data_mean_file": "In case of real data, specifies path to an image mean file.",
    "caffe.data_backend": "In case of real data, specifies its storage backend ('lmdb' or 'leveldb').",
    "caffe.host.path": "Path to a caffe executable in case of bare metal run.",
    "caffe.docker.image": "The name of a docker image to use.",
    "caffe.docker.args": "In case if containerized benchmarks, this are the docker parameters.",

    "bvlc_caffe.host.path": "Path to a BVLC Caffe executable in case of a bare metal run.",
    "bvlc_caffe.host.libpath": "Basically, it's a LD_LIBRARY_PATH for BVLC Caffe in case of a bare metal run.",
    "bvlc_caffe.docker.image": "The name of a docker image to use for BVLC Caffe.",

    "nvidia_caffe.host.path": "Path to a NVIDIA Caffe executable in case of a bare metal run.",
    "nvidia_caffe.host.libpath": "Basically, it's a LD_LIBRARY_PATH for NVIDIA Caffe in case of a bare metal run.",
    "nvidia_caffe.docker.image": "The name of a docker image to use for NVIDIA Caffe.",
    "nvidia_caffe.solver_precision": [
        "Precision for a solver (FLOAT, FLOAT16). Only for NVIDIA Caffe.",
        "More details are here: http://on-demand.gputechconf.com/gtc/2017/presentation/s7218-training-with-mixed-precision-boris-ginsburg.pdf"
    ],
    "nvidia_caffe.forward_precision": [
        "Precision for a forward pass (FLOAT, FLOAT16). Only for NVIDIA Caffe.",
        "More details are here: http://on-demand.gputechconf.com/gtc/2017/presentation/s7218-training-with-mixed-precision-boris-ginsburg.pdf"
    ],
    "nvidia_caffe.forward_math_precision": [
        "Precision for a forward math (FLOAT, FLOAT16). Only for NVIDIA Caffe.",
        "More details are here: http://on-demand.gputechconf.com/gtc/2017/presentation/s7218-training-with-mixed-precision-boris-ginsburg.pdf"
    ],
    "nvidia_caffe.backward_precision": [
        "Precision for a backward pass (FLOAT, FLOAT16). Only for NVIDIA Caffe.",
        "More details are here: http://on-demand.gputechconf.com/gtc/2017/presentation/s7218-training-with-mixed-precision-boris-ginsburg.pdf"
    ],
    "nvidia_caffe.backward_math_precision": [
        "Precision for a backward math (FLOAT, FLOAT16). Only for NVIDIA Caffe.",
        "More details are here: http://on-demand.gputechconf.com/gtc/2017/presentation/s7218-training-with-mixed-precision-boris-ginsburg.pdf"
    ],
    "intel_caffe.host.path": "Path to an Intel Caffe executable in case of a bare metal run.",
    "intel_caffe.host.libpath": "Basically, it's a LD_LIBRARY_PATH for Intel Caffe in case of a bare metal run.",
    "intel_caffe.docker.image": "The name of a docker image to use for Intel Caffe."
}