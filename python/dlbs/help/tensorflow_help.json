{
    "tensorflow.launcher": "Path to a script that launches TensorFlow benchmarks.",
    "tensorflow.python_path": "Path to a TensorFlow benchmarks python folder. Depends on if bare metal/docker based benchmark is requested.",
    "tensorflow.env": "Environmental variables to set for TensorFlow benchmarks.",
    "tensorflow.var_update": "This is a 'variable_update' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",
    "tensorflow.use_nccl": "This is a 'use_nccl' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",    
    "tensorflow.local_parameter_device": "This is a 'local_parameter_device' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",
    "tensorflow.data_dir": [
        "A data directory if real data should be used. If empty, synthetic data is used (no data ingestion pipeline).",
        "See tf_cnn_benchmarks.py for more details."
    ],
    "tensorflow.data_name": "This is a 'data_name' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",
    "tensorflow.distortions": "This is a 'distortions' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",
    "tensorflow.num_intra_threads": "This is a 'num_intra_threads' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",
    "tensorflow.resize_method": "This is a 'resize_method' parameter for tf_cnn_benchmarks. See tf_cnn_benchmarks.py for more details.",
    "tensorflow.args": "These are a command line arguments passed to tf_cnn_benchmarks script.",
    "tensorflow.docker.image": "The name of a docker image to use for TensorFlow if containerized benchmark is requested.",
    "tensorflow.docker.args": "In case if containerized benchmarks, this are the docker parameters.",
    "tensorflow.host.libpath": "Basically, it's a LD_LIBRARY_PATH for TensorFlow in case of a bare metal run."
}